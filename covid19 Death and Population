select *
from project..[covid deaths]
where continent is not null
order by 3,4

--select *
--from project..[covid vacs]
--order by 3,4

select continent, date, total_cases, new_cases, total_deaths, population
from project..[covid deaths]
where continent is not null
order by 1,2

-- looking at total cases vs total deaths 
-- liklyhood of death w/ covid 

select continent, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as deathpercentage
from project..[covid deaths]
where continent is not null

order by 1,2

-- looking at toal cases vs population
--showes what percent got covid 
select continent, date, population, total_cases, (total_cases/population)*100 as percentpopulationinfected
from project..[covid deaths]
where continent is not null
--where location like '%states%'
order by 1,2


--looking at countries with hightest infection rate compared to population 

-- looking at toal cases vs population
--showes what percent got covid 


select continent, population, max(total_cases) as highestinfectioncount, max((total_cases/population))*100 as percentpopulationinfected
from project..[covid deaths]
where continent is not null
--where location like '%states%'
group by continent, population
order by percentpopulationinfected desc

--showing countries highest death count per population
select continent, max(cast(total_deaths as int)) as totaldeathcount
from project..[covid deaths]
where continent is not null
--where location like '%states%'
group by continent
order by totaldeathcount desc

-- breaking down by continent


select continent, max(cast(total_deaths as int)) as totaldeathcount
from project..[covid deaths]
where continent is not null
--where location like '%states%'
group by continent
order by totaldeathcount desc

--showing continents with highest death vount per population 


select continent, max(cast(total_deaths as int)) as totaldeathcount
from project..[covid deaths]
where continent is not null
--where location like '%states%'
group by continent
order by totaldeathcount desc

-- global numbers

select  sum(new_cases)as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast(new_deaths as int))/sum(new_cases)*100 as deathpercentage
from project..[covid deaths]
--where continent like '%states%'
where continent is not null
--group by date
order by 1,2


-- total population vs vaccination 


select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, Sum(Convert(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location order by dea.location,
dea.date) as rollingpeoplevacs
--, (rollingpeoplevacs/population)*100
from project..[covid deaths] dea
join project..[covid vacs] vac
	on dea.location = vac.location
	and dea.date = vac.date
	where dea.continent is not null
	order by 2,3

	-- use cte

with popvsvac (continent, location, date, population, new_vaccinations, rollingpeoplevacs)
as
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, Sum(Convert(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location order by dea.location,
dea.date) as rollingpeoplevacs
--, (rollingpeoplevacs/population)*100
from project..[covid deaths] dea
join project..[covid vacs] vac
	on dea.location = vac.location
	and dea.date = vac.date
	where dea.continent is not null
	--order by 2,3
)
select*, (rollingpeoplevacs/population)*100
from popvsvac


-- temp table 

drop table if exists #percentpopVac
create table #percentpopVac
(
continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric,
rollingpeoplevacs numeric
)

insert into #percentpopVac
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, Sum(Convert(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location order by dea.location,
dea.date) as rollingpeoplevacs
--, (rollingpeoplevacs/population)*100
from project..[covid deaths] dea
join project..[covid vacs] vac
	on dea.location = vac.location
	and dea.date = vac.date
	--where dea.continent is not null
	--order by 2,3

	select*, (rollingpeoplevacs/population)*100
from #percentpopVac


-- creating view to sotre data later  vis


create view percentpopVac as 
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, Sum(Convert(bigint, vac.new_vaccinations)) OVER (Partition by dea.Location order by dea.location,
dea.date) as rollingpeoplevacs
--, (rollingpeoplevacs/population)*100
from project..[covid deaths] dea
join project..[covid vacs] vac
	on dea.location = vac.location
	and dea.date = vac.date
	where dea.continent is not null
	--order by 2,3
	

	select *
	FROM percentpopVac
